[{"C:\\jah-workspace\\tetris-js\\react-js\\src\\index.js":"1","C:\\jah-workspace\\tetris-js\\react-js\\src\\App.js":"2","C:\\jah-workspace\\tetris-js\\react-js\\src\\reportWebVitals.js":"3","C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\Tetris.js":"4","C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\Display.js":"5","C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\StartButton.js":"6","C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\Cell.js":"7","C:\\jah-workspace\\tetris-js\\react-js\\src\\settingGame.js":"8","C:\\jah-workspace\\tetris-js\\react-js\\src\\tetrominos.js":"9","C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\styles\\StyledCell.js":"10","C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\styles\\StyledTetris.js":"11","C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\Canvas.js":"12","C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\styles\\StyledCanvas.js":"13","C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\styles\\StyledDisplay.js":"14","C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\styles\\StyledStartButton.js":"15","C:\\jah-workspace\\tetris-js\\react-js\\src\\hooks\\useCanvas.js":"16","C:\\jah-workspace\\tetris-js\\react-js\\src\\hooks\\useCurrent.js":"17","C:\\jah-workspace\\tetris-js\\react-js\\src\\hooks\\useInterval.js":"18","C:\\jah-workspace\\tetris-js\\react-js\\src\\hooks\\useGameStatus.js":"19"},{"size":517,"mtime":1632047051715,"results":"20","hashOfConfig":"21"},{"size":171,"mtime":1632047051707,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1632047051716,"results":"23","hashOfConfig":"21"},{"size":3513,"mtime":1632096358763,"results":"24","hashOfConfig":"21"},{"size":219,"mtime":1632056618157,"results":"25","hashOfConfig":"21"},{"size":240,"mtime":1632047051710,"results":"26","hashOfConfig":"21"},{"size":243,"mtime":1632050697192,"results":"27","hashOfConfig":"21"},{"size":1115,"mtime":1632055734820,"results":"28","hashOfConfig":"21"},{"size":586,"mtime":1632052779649,"results":"29","hashOfConfig":"21"},{"size":465,"mtime":1632047051712,"results":"30","hashOfConfig":"21"},{"size":467,"mtime":1632047051714,"results":"31","hashOfConfig":"21"},{"size":345,"mtime":1632047051708,"results":"32","hashOfConfig":"21"},{"size":406,"mtime":1632047051712,"results":"33","hashOfConfig":"21"},{"size":456,"mtime":1632056675614,"results":"34","hashOfConfig":"21"},{"size":407,"mtime":1632047051713,"results":"35","hashOfConfig":"21"},{"size":1987,"mtime":1632093595078,"results":"36","hashOfConfig":"21"},{"size":878,"mtime":1632094922230,"results":"37","hashOfConfig":"21"},{"size":507,"mtime":1632094625784,"results":"38","hashOfConfig":"21"},{"size":859,"mtime":1632095655404,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1uu507i",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},"C:\\jah-workspace\\tetris-js\\react-js\\src\\index.js",[],["82","83"],"C:\\jah-workspace\\tetris-js\\react-js\\src\\App.js",[],"C:\\jah-workspace\\tetris-js\\react-js\\src\\reportWebVitals.js",[],"C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\Tetris.js",[],"C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\Display.js",[],"C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\StartButton.js",[],"C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\Cell.js",[],"C:\\jah-workspace\\tetris-js\\react-js\\src\\settingGame.js",[],"C:\\jah-workspace\\tetris-js\\react-js\\src\\tetrominos.js",[],"C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\styles\\StyledCell.js",[],"C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\styles\\StyledTetris.js",[],"C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\Canvas.js",[],"C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\styles\\StyledCanvas.js",[],"C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\styles\\StyledDisplay.js",[],"C:\\jah-workspace\\tetris-js\\react-js\\src\\components\\styles\\StyledStartButton.js",[],"C:\\jah-workspace\\tetris-js\\react-js\\src\\hooks\\useCanvas.js",["84"],"import { useState, useEffect } from 'react';\r\nimport { createCanvas } from '../settingGame';\r\n\r\nexport const useCanvas = (current, resetCurrent) => {\r\n    const[canvas, setCanvas] = useState(createCanvas());\r\n    const [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setRowsCleared(0);\r\n\r\n        const sweepRows = newCanvas => \r\n            // acc : accumulator\r\n            newCanvas.reduce((acc, row) => {\r\n                if (acc == undefined) {\r\n                    acc = [];\r\n                }\r\n                if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n                    setRowsCleared(prev => prev + 1);\r\n                    acc.unshift(new Array(newCanvas[0].length).fill([0, 'clear']));\r\n                    \r\n                    return acc;\r\n                }\r\n                acc.push(row);\r\n                return acc;\r\n            }, []);\r\n        \r\n        // compare with prevCanvas\r\n        const updateCanvas = prevCanvas => {\r\n            // 1 : flush the canvas\r\n            const newCanvas = prevCanvas.map(row => \r\n                row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\r\n            );\r\n\r\n            // 2 : draw tetromino\r\n            current.tetromino.forEach((row, y) => {\r\n                row.forEach((value, x) => {\r\n                    if (value !== 0) {\r\n                        newCanvas[y + current.pos.y][x + current.pos.x] = [\r\n                            value,\r\n                            `${current.collided ? 'merged' : 'clear'}`,\r\n                        ]\r\n                    }\r\n                });\r\n            });\r\n            \r\n            // check if collided or not\r\n            if (current.collided) {\r\n                resetCurrent();\r\n                return sweepRows(newCanvas);\r\n            }\r\n\r\n            return newCanvas;\r\n        };\r\n\r\n        setCanvas(prev => updateCanvas(prev));\r\n    }, [current, resetCurrent]);\r\n\r\n    return [canvas, setCanvas, rowsCleared];\r\n}","C:\\jah-workspace\\tetris-js\\react-js\\src\\hooks\\useCurrent.js",[],"C:\\jah-workspace\\tetris-js\\react-js\\src\\hooks\\useInterval.js",["85","86"],"import React, { useState, useEffect, useRef } from 'react';\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}","C:\\jah-workspace\\tetris-js\\react-js\\src\\hooks\\useGameStatus.js",["87"],"import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n    const [score, setScore] = useState(0);\r\n    const [rows, setRows] = useState(0);\r\n    const [level, setLevel] = useState(0);\r\n\r\n    // original tetris game score\r\n    const linePoints = [40, 100, 300, 1200];\r\n\r\n    const calcScore = useCallback(() => {\r\n        // if have score\r\n        if (rowsCleared > 0) {\r\n            // original tetrigs game score calculated\r\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n            setRows(prev => prev + rowsCleared);\r\n        }\r\n    }, [level, linePoints, rowsCleared]);\r\n\r\n    useEffect(() => {\r\n        calcScore();\r\n    }, [calcScore, rowsCleared, score]);\r\n\r\n    // return set-- for restarting game\r\n    return [score, setScore, rows, setRows, level, setLevel]\r\n}",{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":14,"column":25,"nodeType":"94","messageId":"95","endLine":14,"endColumn":27},{"ruleId":"96","severity":1,"message":"97","line":1,"column":8,"nodeType":"98","messageId":"99","endLine":1,"endColumn":13},{"ruleId":"96","severity":1,"message":"100","line":1,"column":17,"nodeType":"98","messageId":"99","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":9,"column":11,"nodeType":"103","endLine":9,"endColumn":44},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","The 'linePoints' array makes the dependencies of useCallback Hook (at line 18) change on every render. Move it inside the useCallback callback. Alternatively, wrap the initialization of 'linePoints' in its own useMemo() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation"]