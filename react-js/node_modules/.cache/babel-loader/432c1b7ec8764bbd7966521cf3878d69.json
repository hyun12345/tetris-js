{"ast":null,"code":"var _jsxFileName = \"C:\\\\jah-workspace\\\\tetris-js\\\\react-js\\\\src\\\\components\\\\Tetris.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // styled-components\n\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris'; // custon hooks\n\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useCanvas } from '../hooks/useCanvas'; // components\n\nimport Canvas from './Canvas';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tetris = () => {\n  _s();\n\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player] = usePlayer();\n  const [canvas, setCanvas] = useCanvas(player);\n  console.log('re-render');\n  return /*#__PURE__*/_jsxDEV(StyledTetrisWrapper, {\n    children: /*#__PURE__*/_jsxDEV(StyledTetris, {\n      children: [/*#__PURE__*/_jsxDEV(Canvas, {\n        canvas: canvas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Display, {\n            text: \"Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(StartButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tetris, \"J4OufpRrDiTT1oFBolvXp5ltZU0=\", false, function () {\n  return [usePlayer, useCanvas];\n});\n\n_c = Tetris;\nexport default Tetris;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tetris\");","map":{"version":3,"sources":["C:/jah-workspace/tetris-js/react-js/src/components/Tetris.js"],"names":["React","useState","StyledTetrisWrapper","StyledTetris","usePlayer","useCanvas","Canvas","Display","StartButton","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","canvas","setCanvas","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAkD,uBAAlD,C,CAEA;;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,oBAA1B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACa,MAAD,IAAWV,SAAS,EAA1B;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBX,SAAS,CAACS,MAAD,CAArC;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEA,sBACI,QAAC,mBAAD;AAAA,2BACI,QAAC,YAAD;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEH;AAAhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAA,iCACI,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAtBD;;GAAMN,M;UAIeL,S,EACWC,S;;;KAL1BI,M;AAwBN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\n// styled-components\r\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\r\n\r\n// custon hooks\r\nimport { usePlayer } from '../hooks/usePlayer';\r\nimport { useCanvas } from '../hooks/useCanvas';\r\n\r\n// components\r\nimport Canvas from './Canvas';\r\nimport Display from './Display';\r\nimport StartButton from './StartButton';\r\n\r\nconst Tetris = () => {\r\n    const [dropTime, setDropTime] = useState(null);\r\n    const [gameOver, setGameOver] = useState(false);\r\n\r\n    const [player] = usePlayer();\r\n    const [canvas, setCanvas] = useCanvas(player);\r\n\r\n    console.log('re-render');\r\n\r\n    return (\r\n        <StyledTetrisWrapper>\r\n            <StyledTetris>\r\n                <Canvas canvas={canvas} />\r\n                <aside>\r\n                    <div>\r\n                        <Display text=\"Rows\" />\r\n                    </div>\r\n                    <StartButton />\r\n                </aside>\r\n            </StyledTetris>\r\n        </StyledTetrisWrapper>\r\n    )\r\n}\r\n\r\nexport default Tetris;"]},"metadata":{},"sourceType":"module"}