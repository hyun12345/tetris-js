{"ast":null,"code":"var _jsxFileName = \"C:\\\\jah-workspace\\\\tetris-js\\\\react-js\\\\src\\\\components\\\\Tetris.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { createCanvas } from '../settingGame'; // styled-components\n\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris'; // custon hooks\n\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useCanvas } from '../hooks/useCanvas'; // components\n\nimport Canvas from './Canvas';\nimport Display from './Display';\nimport StartButton from './StartButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tetris = () => {\n  _s();\n\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player, updatePlayerPos, resetPlayer] = usePlayer();\n  const [canvas, setCanvas] = useCanvas(player);\n  console.log('re-render');\n\n  const movePlayer = dir => {\n    updatePlayerPos({\n      x: dir,\n      y: 0\n    });\n  }; // reset game\n\n\n  const startGame = () => {\n    setCanvas(createCanvas());\n    resetPlayer();\n  };\n\n  const drop = () => {\n    updatePlayerPos({\n      x: 0,\n      y: 1,\n      collied: false\n    });\n  };\n\n  const dropPlayer = () => {\n    drop();\n  }; // update keyCode to mouseOver later\n\n\n  const move = ({\n    keyCode\n  }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledTetrisWrapper, {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => move(e),\n    children: /*#__PURE__*/_jsxDEV(StyledTetris, {\n      children: [/*#__PURE__*/_jsxDEV(Canvas, {\n        canvas: canvas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: [gameOver ? /*#__PURE__*/_jsxDEV(Display, {\n          gameOver: gameOver,\n          text: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Display, {\n            text: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Display, {\n            text: \"Rows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(StartButton, {\n          onClick: startGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Tetris, \"YW/JtFlupxAYXJL+yZaEQFIpZmY=\", false, function () {\n  return [usePlayer, useCanvas];\n});\n\n_c = Tetris;\nexport default Tetris;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tetris\");","map":{"version":3,"sources":["C:/jah-workspace/tetris-js/react-js/src/components/Tetris.js"],"names":["React","useState","createCanvas","StyledTetrisWrapper","StyledTetris","usePlayer","useCanvas","Canvas","Display","StartButton","Tetris","dropTime","setDropTime","gameOver","setGameOver","player","updatePlayerPos","resetPlayer","canvas","setCanvas","console","log","movePlayer","dir","x","y","startGame","drop","collied","dropPlayer","move","keyCode","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { createCanvas } from '../settingGame';\r\n\r\n// styled-components\r\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\r\n\r\n// custon hooks\r\nimport { usePlayer } from '../hooks/usePlayer';\r\nimport { useCanvas } from '../hooks/useCanvas';\r\n\r\n// components\r\nimport Canvas from './Canvas';\r\nimport Display from './Display';\r\nimport StartButton from './StartButton';\r\n\r\nconst Tetris = () => {\r\n    const [dropTime, setDropTime] = useState(null);\r\n    const [gameOver, setGameOver] = useState(false);\r\n\r\n    const [player, updatePlayerPos, resetPlayer] = usePlayer();\r\n    const [canvas, setCanvas] = useCanvas(player);\r\n\r\n    console.log('re-render');\r\n\r\n    const movePlayer = dir => {\r\n        updatePlayerPos({x:dir, y:0});\r\n    }\r\n    \r\n    // reset game\r\n    const startGame = () => {\r\n        setCanvas(createCanvas());\r\n        resetPlayer();\r\n\r\n    }\r\n\r\n    const drop = () => {\r\n        updatePlayerPos({x:0, y:1, collied:false});\r\n    }\r\n\r\n    const dropPlayer = () => {\r\n        drop();\r\n    }\r\n\r\n    // update keyCode to mouseOver later\r\n    const move = ({keyCode}) => {\r\n        if (!gameOver) {\r\n            if (keyCode === 37) {\r\n                movePlayer(-1);\r\n            } else if (keyCode === 39) {\r\n                movePlayer(1);\r\n            } else if (keyCode === 40) {\r\n                dropPlayer();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown={e => move(e)}>\r\n            <StyledTetris>\r\n                <Canvas canvas={canvas} />\r\n                <aside>\r\n                    {gameOver ? (\r\n                        <Display gameOver={gameOver} text=\"Game Over\" />\r\n                    ): (\r\n                        <div>\r\n                            <Display text=\"Score\" />\r\n                            <Display text=\"Rows\" />\r\n                        </div>\r\n                    )}\r\n                    <StartButton onClick={startGame} />\r\n                </aside>\r\n            </StyledTetris>\r\n        </StyledTetrisWrapper>\r\n    )\r\n}\r\n\r\nexport default Tetris;"]},"metadata":{},"sourceType":"module"}