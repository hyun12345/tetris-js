{"ast":null,"code":"import _objectSpread from \"C:/jah-workspace/tetris-js/react-js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:/jah-workspace/tetris-js/react-js/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nimport { CANVAS_WIDTH } from '../settingGame';\nimport { TETROMINOS, setBlock } from '../tetrominos';\nexport var useCurrent = function useCurrent() {\n  _s();\n\n  // set default(canvas)\n  var _useState = useState({\n    pos: {\n      x: 0,\n      y: 0\n    },\n    tetromino: TETROMINOS[0].shape,\n    collided: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      current = _useState2[0],\n      setCurrent = _useState2[1];\n\n  var updateCurrentPos = function updateCurrentPos(_ref) {\n    var x = _ref.x,\n        y = _ref.y,\n        collided = _ref.collided;\n    setCurrent(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        pos: {\n          x: prev.pos.x += x,\n          y: prev.pos.y += y\n        },\n        collided: collided\n      });\n    });\n  }; // reset\n\n\n  var resetCurrent = useCallback(function () {\n    setCurrent({\n      // x result : set block position center of the canvas\n      pos: {\n        x: CANVAS_WIDTH / 2 - 1,\n        y: 0\n      },\n      tetromino: setBlock().shape,\n      collided: false\n    });\n  }, []);\n  return [current, updateCurrentPos, resetCurrent];\n};\n\n_s(useCurrent, \"QH9wOYs75kqieMqYmgNxzOSzIsY=\");","map":{"version":3,"sources":["C:/jah-workspace/tetris-js/react-js/src/_hooks/useCurrent.js"],"names":["useState","useCallback","CANVAS_WIDTH","TETROMINOS","setBlock","useCurrent","pos","x","y","tetromino","shape","collided","current","setCurrent","updateCurrentPos","prev","resetCurrent"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,eAArC;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AAC5B;AACA,kBAA8BL,QAAQ,CAAC;AACnCM,IAAAA,GAAG,EAAE;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KAD8B;AAEnCC,IAAAA,SAAS,EAAEN,UAAU,CAAC,CAAD,CAAV,CAAcO,KAFU;AAGnCC,IAAAA,QAAQ,EAAE;AAHyB,GAAD,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AAMA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAwB;AAAA,QAArBP,CAAqB,QAArBA,CAAqB;AAAA,QAAlBC,CAAkB,QAAlBA,CAAkB;AAAA,QAAfG,QAAe,QAAfA,QAAe;AAC7CE,IAAAA,UAAU,CAAC,UAAAE,IAAI;AAAA,6CACRA,IADQ;AAEXT,QAAAA,GAAG,EAAE;AAAEC,UAAAA,CAAC,EAAGQ,IAAI,CAACT,GAAL,CAASC,CAAT,IAAcA,CAApB;AAAwBC,UAAAA,CAAC,EAAGO,IAAI,CAACT,GAAL,CAASE,CAAT,IAAcA;AAA1C,SAFM;AAGXG,QAAAA,QAAQ,EAARA;AAHW;AAAA,KAAL,CAAV;AAKH,GAND,CAR4B,CAgB5B;;;AACA,MAAMK,YAAY,GAAGf,WAAW,CAAC,YAAM;AACnCY,IAAAA,UAAU,CAAC;AACP;AACAP,MAAAA,GAAG,EAAE;AAAEC,QAAAA,CAAC,EAAIL,YAAY,GAAG,CAAhB,GAAqB,CAA3B;AAA+BM,QAAAA,CAAC,EAAE;AAAlC,OAFE;AAGPC,MAAAA,SAAS,EAAEL,QAAQ,GAAGM,KAHf;AAIPC,MAAAA,QAAQ,EAAE;AAJH,KAAD,CAAV;AAMH,GAP+B,EAO7B,EAP6B,CAAhC;AASA,SAAO,CAACC,OAAD,EAAUE,gBAAV,EAA4BE,YAA5B,CAAP;AACH,CA3BM;;GAAMX,U","sourcesContent":["import { useState, useCallback } from 'react';\r\nimport { CANVAS_WIDTH } from '../settingGame';\r\nimport { TETROMINOS, setBlock } from '../tetrominos';\r\n\r\nexport const useCurrent = () => {\r\n    // set default(canvas)\r\n    const [current, setCurrent] = useState({\r\n        pos: { x: 0, y: 0 },\r\n        tetromino: TETROMINOS[0].shape,\r\n        collided: false,\r\n    });\r\n\r\n    const updateCurrentPos = ({ x, y, collided }) => {\r\n        setCurrent(prev => ({\r\n            ...prev,\r\n            pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\r\n            collided,\r\n        }));\r\n    };\r\n\r\n    // reset\r\n    const resetCurrent = useCallback(() => {\r\n        setCurrent({\r\n            // x result : set block position center of the canvas\r\n            pos: { x: ((CANVAS_WIDTH / 2) - 1), y: 0 },\r\n            tetromino: setBlock().shape,\r\n            collided: false,\r\n        });\r\n    }, []);\r\n\r\n    return [current, updateCurrentPos, resetCurrent];\r\n};\r\n"]},"metadata":{},"sourceType":"module"}