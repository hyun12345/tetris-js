{"ast":null,"code":"var DESCRIPTORS = require('../internals/descriptors');\n\nvar FUNCTION_NAME_EXISTS = require('../internals/function-name').EXISTS;\n\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name'; // Function instances `.name` property\n// https://tc39.es/ecma262/#sec-function-instances-name\n\nif (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function get() {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}","map":{"version":3,"sources":["C:/jah-workspace/tetris-js/node_modules/core-js/modules/es.function.name.js"],"names":["DESCRIPTORS","require","FUNCTION_NAME_EXISTS","EXISTS","defineProperty","f","FunctionPrototype","Function","prototype","FunctionPrototypeToString","toString","nameRE","NAME","configurable","get","call","match","error"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,0BAAD,CAAzB;;AACA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,4BAAD,CAAP,CAAsCE,MAAjE;;AACA,IAAIC,cAAc,GAAGH,OAAO,CAAC,qCAAD,CAAP,CAA+CI,CAApE;;AAEA,IAAIC,iBAAiB,GAAGC,QAAQ,CAACC,SAAjC;AACA,IAAIC,yBAAyB,GAAGH,iBAAiB,CAACI,QAAlD;AACA,IAAIC,MAAM,GAAG,uBAAb;AACA,IAAIC,IAAI,GAAG,MAAX,C,CAEA;AACA;;AACA,IAAIZ,WAAW,IAAI,CAACE,oBAApB,EAA0C;AACxCE,EAAAA,cAAc,CAACE,iBAAD,EAAoBM,IAApB,EAA0B;AACtCC,IAAAA,YAAY,EAAE,IADwB;AAEtCC,IAAAA,GAAG,EAAE,eAAY;AACf,UAAI;AACF,eAAOL,yBAAyB,CAACM,IAA1B,CAA+B,IAA/B,EAAqCC,KAArC,CAA2CL,MAA3C,EAAmD,CAAnD,CAAP;AACD,OAFD,CAEE,OAAOM,KAAP,EAAc;AACd,eAAO,EAAP;AACD;AACF;AARqC,GAA1B,CAAd;AAUD","sourcesContent":["var DESCRIPTORS = require('../internals/descriptors');\r\nvar FUNCTION_NAME_EXISTS = require('../internals/function-name').EXISTS;\r\nvar defineProperty = require('../internals/object-define-property').f;\r\n\r\nvar FunctionPrototype = Function.prototype;\r\nvar FunctionPrototypeToString = FunctionPrototype.toString;\r\nvar nameRE = /^\\s*function ([^ (]*)/;\r\nvar NAME = 'name';\r\n\r\n// Function instances `.name` property\r\n// https://tc39.es/ecma262/#sec-function-instances-name\r\nif (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {\r\n  defineProperty(FunctionPrototype, NAME, {\r\n    configurable: true,\r\n    get: function () {\r\n      try {\r\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\r\n      } catch (error) {\r\n        return '';\r\n      }\r\n    }\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"script"}